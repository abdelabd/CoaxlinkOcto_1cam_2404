-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pix_threshold_pix_threshold_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    VideoIn_TDATA : IN STD_LOGIC_VECTOR (255 downto 0);
    VideoIn_TVALID : IN STD_LOGIC;
    VideoIn_TREADY : OUT STD_LOGIC;
    VideoOut_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
    VideoOut_TVALID : OUT STD_LOGIC;
    VideoOut_TREADY : IN STD_LOGIC;
    threshold_value : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of pix_threshold_pix_threshold_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_83 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000011";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal DataBuf_Data_V : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal VideoIn_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_fu_223_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_20_fu_802_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal VideoOut_TDATA_blk_n : STD_LOGIC;
    signal tmp_1_fu_241_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal and_ln42_fu_280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal p_Val2_s_reg_155 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_predicate_op27_write_state2 : BOOLEAN;
    signal ap_block_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal inFrame_reg_165 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_buf_User_V_reg_179 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal tmp_2_fu_266_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_ZZ18pix_threshold_procRN3hls6streamI12video_structLi0EEES3_7ap_uintILi8EEE7Data_reg_190 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln66_fu_810_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal trunc_ln26_fu_231_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal output_buf_User_V_1_fu_132 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal zext_ln38_fu_257_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal zext_ln44_fu_294_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal zext_ln60_fu_797_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal shl_ln_fu_249_p3 : STD_LOGIC_VECTOR (131 downto 0);
    signal trunc_ln628_fu_262_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1019_fu_274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_286_p3 : STD_LOGIC_VECTOR (131 downto 0);
    signal trunc_ln628_1_fu_299_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_322_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_1_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_1_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_351_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_2_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_2_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_380_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_3_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_3_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_409_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_4_fu_419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_4_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_438_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_5_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_5_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_467_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_6_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_6_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_496_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_7_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_7_fu_511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_525_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_8_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_8_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_554_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_9_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_9_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_583_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_10_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_10_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_612_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_11_fu_622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_11_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_641_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_12_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_12_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_670_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_13_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_13_fu_685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_699_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_14_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_14_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_728_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_15_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_15_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln345_14_fu_720_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_13_fu_691_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_12_fu_662_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_11_fu_633_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_10_fu_604_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_9_fu_575_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_8_fu_546_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_7_fu_517_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_6_fu_488_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_5_fu_459_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_4_fu_430_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_3_fu_401_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_2_fu_372_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_1_fu_343_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_fu_314_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_749_p17 : STD_LOGIC_VECTOR (120 downto 0);
    signal sext_ln345_fu_785_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_19_fu_789_p3 : STD_LOGIC_VECTOR (131 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_condition_95 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    DataBuf_Data_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY)) or ((tmp_fu_223_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_fu_223_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                DataBuf_Data_V <= trunc_ln26_fu_231_p1;
            elsif ((not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_20_fu_802_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_20_fu_802_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                DataBuf_Data_V <= trunc_ln66_fu_810_p1;
            end if; 
        end if;
    end process;

    inFrame_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_95)) then
                if ((tmp_fu_223_p3 = ap_const_lv1_1)) then 
                    inFrame_reg_165 <= ap_const_lv1_0;
                elsif ((tmp_fu_223_p3 = ap_const_lv1_0)) then 
                    inFrame_reg_165 <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;

    output_buf_User_V_1_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                output_buf_User_V_1_fu_132 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (inFrame_reg_165 = ap_const_lv1_1))) then 
                output_buf_User_V_1_fu_132 <= p_ZZ18pix_threshold_procRN3hls6streamI12video_structLi0EEES3_7ap_uintILi8EEE7Data_reg_190;
            end if; 
        end if;
    end process;

    output_buf_User_V_reg_179_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_const_lv1_1 = and_ln42_fu_280_p2) and (ap_const_logic_0 = VideoOut_TREADY)))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_2_fu_266_p3 = ap_const_lv1_1))) then 
                output_buf_User_V_reg_179 <= p_Val2_s_reg_155;
            elsif ((not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_20_fu_802_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_20_fu_802_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                output_buf_User_V_reg_179 <= VideoIn_TDATA(131 downto 128);
            end if; 
        end if;
    end process;

    p_Val2_s_reg_155_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_95)) then
                if ((tmp_fu_223_p3 = ap_const_lv1_1)) then 
                    p_Val2_s_reg_155 <= output_buf_User_V_1_fu_132;
                elsif ((tmp_fu_223_p3 = ap_const_lv1_0)) then 
                    p_Val2_s_reg_155 <= VideoIn_TDATA(131 downto 128);
                end if;
            end if; 
        end if;
    end process;

    p_ZZ18pix_threshold_procRN3hls6streamI12video_structLi0EEES3_7ap_uintILi8EEE7Data_reg_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_20_fu_802_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_20_fu_802_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                p_ZZ18pix_threshold_procRN3hls6streamI12video_structLi0EEES3_7ap_uintILi8EEE7Data_reg_190 <= output_buf_User_V_reg_179;
            elsif ((not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_const_lv1_1 = and_ln42_fu_280_p2) and (ap_const_logic_0 = VideoOut_TREADY)))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_2_fu_266_p3 = ap_const_lv1_0))) then 
                p_ZZ18pix_threshold_procRN3hls6streamI12video_structLi0EEES3_7ap_uintILi8EEE7Data_reg_190 <= p_Val2_s_reg_155;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, VideoIn_TVALID, VideoOut_TREADY, ap_CS_fsm_state2, tmp_fu_223_p3, ap_CS_fsm_state4, tmp_20_fu_802_p3, ap_CS_fsm_state3, and_ln42_fu_280_p2, ap_predicate_op27_write_state2, ap_block_state2_io, inFrame_reg_165, ap_block_state3_io, tmp_2_fu_266_p3, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY)) or ((tmp_fu_223_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_const_lv1_1 = and_ln42_fu_280_p2) and (ap_const_logic_0 = VideoOut_TREADY)))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_2_fu_266_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_const_lv1_1 = and_ln42_fu_280_p2) and (ap_const_logic_0 = VideoOut_TREADY)))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_2_fu_266_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_20_fu_802_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_20_fu_802_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif ((not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_20_fu_802_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_20_fu_802_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (inFrame_reg_165 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;

    VideoIn_TDATA_blk_n_assign_proc : process(VideoIn_TVALID, ap_CS_fsm_state2, tmp_fu_223_p3, ap_CS_fsm_state4, tmp_20_fu_802_p3)
    begin
        if ((((tmp_20_fu_802_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((tmp_fu_223_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            VideoIn_TDATA_blk_n <= VideoIn_TVALID;
        else 
            VideoIn_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    VideoIn_TREADY_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, ap_CS_fsm_state2, tmp_fu_223_p3, ap_CS_fsm_state4, tmp_20_fu_802_p3, ap_predicate_op27_write_state2, ap_block_state2_io)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY)) or ((tmp_fu_223_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_fu_223_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_20_fu_802_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_20_fu_802_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            VideoIn_TREADY <= ap_const_logic_1;
        else 
            VideoIn_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    VideoOut_TDATA_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, ap_CS_fsm_state2, tmp_fu_223_p3, ap_CS_fsm_state4, tmp_20_fu_802_p3, ap_CS_fsm_state3, and_ln42_fu_280_p2, ap_predicate_op27_write_state2, zext_ln38_fu_257_p1, zext_ln44_fu_294_p1, zext_ln60_fu_797_p1)
    begin
        if ((not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_20_fu_802_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            VideoOut_TDATA <= zext_ln60_fu_797_p1;
        elsif ((not(((ap_const_lv1_1 = and_ln42_fu_280_p2) and (ap_const_logic_0 = VideoOut_TREADY))) and (ap_const_lv1_1 = and_ln42_fu_280_p2) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            VideoOut_TDATA <= zext_ln44_fu_294_p1;
        elsif ((not((((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY)) or ((tmp_fu_223_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            VideoOut_TDATA <= zext_ln38_fu_257_p1;
        else 
            VideoOut_TDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    VideoOut_TDATA_blk_n_assign_proc : process(VideoOut_TREADY, ap_CS_fsm_state2, tmp_fu_223_p3, ap_CS_fsm_state4, tmp_1_fu_241_p3, ap_CS_fsm_state3, and_ln42_fu_280_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_lv1_1 = and_ln42_fu_280_p2) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((tmp_1_fu_241_p3 = ap_const_lv1_0) and (tmp_fu_223_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            VideoOut_TDATA_blk_n <= VideoOut_TREADY;
        else 
            VideoOut_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    VideoOut_TVALID_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, ap_CS_fsm_state2, tmp_fu_223_p3, ap_CS_fsm_state4, tmp_20_fu_802_p3, ap_CS_fsm_state3, and_ln42_fu_280_p2, ap_predicate_op27_write_state2, ap_block_state2_io, ap_block_state3_io)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY)) or ((tmp_fu_223_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_20_fu_802_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_const_lv1_1 = and_ln42_fu_280_p2) and (ap_const_logic_0 = VideoOut_TREADY)))) and (ap_const_lv1_1 = and_ln42_fu_280_p2) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            VideoOut_TVALID <= ap_const_logic_1;
        else 
            VideoOut_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    and_ln42_fu_280_p2 <= (xor_ln1019_fu_274_p2 and trunc_ln628_fu_262_p1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, tmp_fu_223_p3, ap_predicate_op27_write_state2, ap_block_state2_io)
    begin
        if (((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY)) or ((tmp_fu_223_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(VideoOut_TREADY, and_ln42_fu_280_p2, ap_block_state3_io)
    begin
        if (((ap_const_boolean_1 = ap_block_state3_io) or ((ap_const_lv1_1 = and_ln42_fu_280_p2) and (ap_const_logic_0 = VideoOut_TREADY)))) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, tmp_20_fu_802_p3)
    begin
        if (((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_20_fu_802_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_block_state2_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, tmp_fu_223_p3, ap_predicate_op27_write_state2)
    begin
                ap_block_state2 <= (((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY)) or ((tmp_fu_223_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)));
    end process;


    ap_block_state2_io_assign_proc : process(VideoOut_TREADY, ap_predicate_op27_write_state2)
    begin
                ap_block_state2_io <= ((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY));
    end process;


    ap_block_state3_assign_proc : process(VideoOut_TREADY, and_ln42_fu_280_p2)
    begin
                ap_block_state3 <= ((ap_const_lv1_1 = and_ln42_fu_280_p2) and (ap_const_logic_0 = VideoOut_TREADY));
    end process;


    ap_block_state3_io_assign_proc : process(VideoOut_TREADY, and_ln42_fu_280_p2)
    begin
                ap_block_state3_io <= ((ap_const_lv1_1 = and_ln42_fu_280_p2) and (ap_const_logic_0 = VideoOut_TREADY));
    end process;


    ap_block_state4_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, tmp_20_fu_802_p3)
    begin
                ap_block_state4 <= ((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_20_fu_802_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)));
    end process;


    ap_condition_95_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, ap_CS_fsm_state2, tmp_fu_223_p3, ap_predicate_op27_write_state2, ap_block_state2_io)
    begin
                ap_condition_95 <= (not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY)) or ((tmp_fu_223_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (ap_const_logic_1 = ap_CS_fsm_state2));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, inFrame_reg_165, ap_CS_fsm_state5)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (inFrame_reg_165 = ap_const_lv1_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op27_write_state2_assign_proc : process(tmp_fu_223_p3, tmp_1_fu_241_p3)
    begin
                ap_predicate_op27_write_state2 <= ((tmp_1_fu_241_p3 = ap_const_lv1_0) and (tmp_fu_223_p3 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(inFrame_reg_165, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (inFrame_reg_165 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1031_10_fu_593_p2 <= "1" when (unsigned(tmp_13_fu_583_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_11_fu_622_p2 <= "1" when (unsigned(tmp_14_fu_612_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_12_fu_651_p2 <= "1" when (unsigned(tmp_15_fu_641_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_13_fu_680_p2 <= "1" when (unsigned(tmp_16_fu_670_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_14_fu_709_p2 <= "1" when (unsigned(tmp_17_fu_699_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_15_fu_738_p2 <= "1" when (unsigned(tmp_18_fu_728_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_1_fu_332_p2 <= "1" when (unsigned(tmp_4_fu_322_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_2_fu_361_p2 <= "1" when (unsigned(tmp_5_fu_351_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_3_fu_390_p2 <= "1" when (unsigned(tmp_6_fu_380_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_4_fu_419_p2 <= "1" when (unsigned(tmp_7_fu_409_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_5_fu_448_p2 <= "1" when (unsigned(tmp_8_fu_438_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_6_fu_477_p2 <= "1" when (unsigned(tmp_9_fu_467_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_7_fu_506_p2 <= "1" when (unsigned(tmp_10_fu_496_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_8_fu_535_p2 <= "1" when (unsigned(tmp_11_fu_525_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_9_fu_564_p2 <= "1" when (unsigned(tmp_12_fu_554_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_fu_303_p2 <= "1" when (unsigned(trunc_ln628_1_fu_299_p1) < unsigned(threshold_value)) else "0";
    p_Result_s_fu_749_p17 <= (((((((((((((((xor_ln1031_15_fu_743_p2 & select_ln345_14_fu_720_p3) & select_ln345_13_fu_691_p3) & select_ln345_12_fu_662_p3) & select_ln345_11_fu_633_p3) & select_ln345_10_fu_604_p3) & select_ln345_9_fu_575_p3) & select_ln345_8_fu_546_p3) & select_ln345_7_fu_517_p3) & select_ln345_6_fu_488_p3) & select_ln345_5_fu_459_p3) & select_ln345_4_fu_430_p3) & select_ln345_3_fu_401_p3) & select_ln345_2_fu_372_p3) & select_ln345_1_fu_343_p3) & select_ln345_fu_314_p3);
    select_ln345_10_fu_604_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_10_fu_598_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_11_fu_633_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_11_fu_627_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_12_fu_662_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_12_fu_656_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_13_fu_691_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_13_fu_685_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_14_fu_720_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_14_fu_714_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_1_fu_343_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_1_fu_337_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_2_fu_372_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_2_fu_366_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_3_fu_401_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_3_fu_395_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_4_fu_430_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_4_fu_424_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_5_fu_459_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_5_fu_453_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_6_fu_488_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_6_fu_482_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_7_fu_517_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_7_fu_511_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_8_fu_546_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_8_fu_540_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_9_fu_575_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_9_fu_569_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_fu_314_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_fu_308_p2(0) = '1') else 
        ap_const_lv8_0;
        sext_ln345_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_s_fu_749_p17),128));

    shl_ln_fu_249_p3 <= (output_buf_User_V_1_fu_132 & ap_const_lv128_lc_1);
    tmp_10_fu_496_p4 <= DataBuf_Data_V(63 downto 56);
    tmp_11_fu_525_p4 <= DataBuf_Data_V(71 downto 64);
    tmp_12_fu_554_p4 <= DataBuf_Data_V(79 downto 72);
    tmp_13_fu_583_p4 <= DataBuf_Data_V(87 downto 80);
    tmp_14_fu_612_p4 <= DataBuf_Data_V(95 downto 88);
    tmp_15_fu_641_p4 <= DataBuf_Data_V(103 downto 96);
    tmp_16_fu_670_p4 <= DataBuf_Data_V(111 downto 104);
    tmp_17_fu_699_p4 <= DataBuf_Data_V(119 downto 112);
    tmp_18_fu_728_p4 <= DataBuf_Data_V(127 downto 120);
    tmp_19_fu_789_p3 <= (output_buf_User_V_reg_179 & sext_ln345_fu_785_p1);
    tmp_1_fu_241_p3 <= output_buf_User_V_1_fu_132(2 downto 2);
    tmp_20_fu_802_p3 <= output_buf_User_V_reg_179(2 downto 2);
    tmp_2_fu_266_p3 <= p_Val2_s_reg_155(1 downto 1);
    tmp_3_fu_286_p3 <= (p_Val2_s_reg_155 & DataBuf_Data_V);
    tmp_4_fu_322_p4 <= DataBuf_Data_V(15 downto 8);
    tmp_5_fu_351_p4 <= DataBuf_Data_V(23 downto 16);
    tmp_6_fu_380_p4 <= DataBuf_Data_V(31 downto 24);
    tmp_7_fu_409_p4 <= DataBuf_Data_V(39 downto 32);
    tmp_8_fu_438_p4 <= DataBuf_Data_V(47 downto 40);
    tmp_9_fu_467_p4 <= DataBuf_Data_V(55 downto 48);
    tmp_fu_223_p3 <= output_buf_User_V_1_fu_132(3 downto 3);
    trunc_ln26_fu_231_p1 <= VideoIn_TDATA(128 - 1 downto 0);
    trunc_ln628_1_fu_299_p1 <= DataBuf_Data_V(8 - 1 downto 0);
    trunc_ln628_fu_262_p1 <= p_Val2_s_reg_155(1 - 1 downto 0);
    trunc_ln66_fu_810_p1 <= VideoIn_TDATA(128 - 1 downto 0);
    xor_ln1019_fu_274_p2 <= (tmp_2_fu_266_p3 xor ap_const_lv1_1);
    xor_ln1031_10_fu_598_p2 <= (icmp_ln1031_10_fu_593_p2 xor ap_const_lv1_1);
    xor_ln1031_11_fu_627_p2 <= (icmp_ln1031_11_fu_622_p2 xor ap_const_lv1_1);
    xor_ln1031_12_fu_656_p2 <= (icmp_ln1031_12_fu_651_p2 xor ap_const_lv1_1);
    xor_ln1031_13_fu_685_p2 <= (icmp_ln1031_13_fu_680_p2 xor ap_const_lv1_1);
    xor_ln1031_14_fu_714_p2 <= (icmp_ln1031_14_fu_709_p2 xor ap_const_lv1_1);
    xor_ln1031_15_fu_743_p2 <= (icmp_ln1031_15_fu_738_p2 xor ap_const_lv1_1);
    xor_ln1031_1_fu_337_p2 <= (icmp_ln1031_1_fu_332_p2 xor ap_const_lv1_1);
    xor_ln1031_2_fu_366_p2 <= (icmp_ln1031_2_fu_361_p2 xor ap_const_lv1_1);
    xor_ln1031_3_fu_395_p2 <= (icmp_ln1031_3_fu_390_p2 xor ap_const_lv1_1);
    xor_ln1031_4_fu_424_p2 <= (icmp_ln1031_4_fu_419_p2 xor ap_const_lv1_1);
    xor_ln1031_5_fu_453_p2 <= (icmp_ln1031_5_fu_448_p2 xor ap_const_lv1_1);
    xor_ln1031_6_fu_482_p2 <= (icmp_ln1031_6_fu_477_p2 xor ap_const_lv1_1);
    xor_ln1031_7_fu_511_p2 <= (icmp_ln1031_7_fu_506_p2 xor ap_const_lv1_1);
    xor_ln1031_8_fu_540_p2 <= (icmp_ln1031_8_fu_535_p2 xor ap_const_lv1_1);
    xor_ln1031_9_fu_569_p2 <= (icmp_ln1031_9_fu_564_p2 xor ap_const_lv1_1);
    xor_ln1031_fu_308_p2 <= (icmp_ln1031_fu_303_p2 xor ap_const_lv1_1);
    zext_ln38_fu_257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_249_p3),256));
    zext_ln44_fu_294_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_286_p3),256));
    zext_ln60_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_789_p3),256));
end behav;
